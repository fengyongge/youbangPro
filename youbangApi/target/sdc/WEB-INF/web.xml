<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         id="WebApp_ID" version="3.0">

  <display-name>test</display-name>


  <!-- JerseyServlet API -->
  <servlet>
    <servlet-name>JerseyServlet</servlet-name>
    <servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
    <!--  如果想加入多个拦截器，请用;隔开   request拦截器 -->
    <init-param>
      <param-name>com.sun.jersey.spi.container.ContainerRequestFilters</param-name>
      <param-value>com.test.system.autho.v1.JerseyRequestFilter</param-value>
    </init-param>
    <init-param>
      <param-name>com.sun.jersey.config.property.packages</param-name>
      <param-value>com.test.api.v1</param-value>
    </init-param>
    <!--  如果想加入多个拦截器，请用;隔开  response拦截器 -->
    <init-param>
      <param-name>com.sun.jersey.spi.container.ContainerResponseFilters</param-name>
      <param-value>com.test.system.autho.v1.JerseyResponseFilter</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <servlet-mapping>
    <servlet-name>JerseyServlet</servlet-name>
    <url-pattern>/v1/*</url-pattern>
  </servlet-mapping>


  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:spring/spring.xml,classpath:spring/spring-mybatis.xml,classpath:spring/spring-mvc.xml</param-value>
  </context-param>

  <!--  授权验证过滤 -->
  <!-- 	<filter>
          <filter-name>springSecurityFilterChain</filter-name>
          <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
      </filter>
      <filter-mapping>
          <filter-name>springSecurityFilterChain</filter-name>
          <url-pattern>/v1/*</url-pattern>
      </filter-mapping> -->


  <!-- 授权过滤 -->
  <!--
  <filter>
    <filter-name>JerseyRequestFilter</filter-name>
    <filter-class>com.test.system.autho.v1.MyRequestFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>JerseyRequestFilter</filter-name>
    <url-pattern>/v1/*</url-pattern>
  </filter-mapping>
   -->

  <filter>
    <!-- 前台往后台提交 -->
    <description>字符集过滤器</description>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <description>字符集编码</description>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!-- 以下3项参数与log4j的配置相关 -->

  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>classpath:spring/properties/log4j.properties</param-value>
  </context-param>

  <context-param>
    <param-name>log4jRefreshInterval</param-name>
    <param-value>60000</param-value>
  </context-param>
  <listener>
    <listener-class>
      org.springframework.web.util.Log4jConfigListener
    </listener-class>
  </listener>
  <!-- end -->

  <listener>
    <description>spring监听器</description>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!-- 防止spring内存溢出监听器 -->
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>

  <!-- 关闭连接池 -->

  <listener>
    <listener-class>com.test.system.servlet.shutdown.MyServletShutDown</listener-class>
  </listener>



  <!-- spring mvc servlet -->
  <!-- 	<servlet>
          <description>spring mvc servlet</description>
          <servlet-name>springMvc</servlet-name>
          <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
          <init-param>
              <description>spring mvc 配置文件</description>
              <param-name>contextConfigLocation</param-name>
              <param-value>classpath:spring/spring-mvc.xml</param-value>
          </init-param>
          <load-on-startup>1</load-on-startup>
      </servlet>
      <servlet-mapping>
          <servlet-name>springMvc</servlet-name>
          <url-pattern>/</url-pattern>
      </servlet-mapping>
      <context-param>
          <param-name>spring.profiles.active</param-name>
          <param-value>development</param-value>
      </context-param>
      <context-param>
          <param-name>spring.profiles.default</param-name>
          <param-value>development</param-value>
      </context-param>
      <context-param>
          <param-name>spring.liveBeansView.mbeanDomain</param-name>
          <param-value>development</param-value>
      </context-param>
      测试 使用 /views/management/
      <welcome-file-list>
          <welcome-file>/index.html</welcome-file>
          <welcome-file>/views/management/ttindex.html</welcome-file>
          <welcome-file>/tt.html</welcome-file>
          <welcome-file>/fileupload.jsp</welcome-file>
      </welcome-file-list>
      配置session超时时间，单位分钟
      <session-config>
          <session-timeout>15</session-timeout>
      </session-config> -->


  <!-- Druid sql监控 by today at 2016-12-17 -->
  <!-- <filter>
       <filter-name>druidWebStatFilter</filter-name>
       <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
       <init-param>
            <param-name>exclusions</param-name>
            <param-value>/public/*,*.js,*.css,/druid*,*.jsp,*.swf,*.gif,*.jpg,*.png,*.ico</param-value>
       </init-param>
       <init-param>
            <param-name>principalSessionName</param-name>
            <param-value>sessionInfo</param-value>
       </init-param>
       <init-param>
            <param-name>profileEnable</param-name>
            <param-value>true</param-value>
       </init-param>
       关闭session统计功能
       <init-param>
            <param-name>sessionStatEnable</param-name>
            <param-value>false</param-value>
       </init-param>
  </filter>
  <filter-mapping>
       <filter-name>druidWebStatFilter</filter-name>
       <url-pattern>/*</url-pattern>
  </filter-mapping>
  配置 Druid 监控信息显示页面
 <servlet>
     <servlet-name>DruidStatView</servlet-name>
     <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
     <init-param>
         允许清空统计数据
         <param-name>resetEnable</param-name>
         <param-value>true</param-value>
     </init-param>
     <init-param>
         用户名
         <param-name>loginUsername</param-name>
         <param-value>xijie</param-value>
     </init-param>
     <init-param>
         密码
         <param-name>loginPassword</param-name>
         <param-value>xijie123</param-value>
     </init-param>
 </servlet>
 <servlet-mapping>
     <servlet-name>DruidStatView</servlet-name>
     <url-pattern>/druid/*</url-pattern>
 </servlet-mapping>	 -->

  <!-- Druid IP 访问限制 today at 2016-12-17 -->
  <!-- 	 <filter>
            <filter-name>IPFilterDruid</filter-name>
            <filter-class>com.sdc.utils.filter.IPFilter</filter-class>
            <init-param>
                 <param-name>filterIPs</param-name>
                 <param-value>127.0.0.1,192.168.0.14</param-value>
               </init-param>
               <init-param>
                 <param-name>enable</param-name>
                 <param-value>true</param-value>
            </init-param>
       </filter>
       <filter-mapping>
            <filter-name>IPFilterDruid </filter-name>
            <url-pattern>/druid/*</url-pattern>
       </filter-mapping> -->

</web-app>

